#generated by `lor framework`
#尽量不要用root用户，权限太大了，最佳方式是建一个项目专用的用户，例如：vssas-user,给其合适的权限
user root root;
#user nobody nobody;

pid tmp/dev-web-nginx.pid;

# This number should be at maxium the number of CPU on the server
worker_processes 1;

env TNS_ADMIN=/usr/lib/oracle/12.1/client64/network/admin;
env NLS_LANG=AMERICAN_AMERICA.AL32UTF8;

error_log logs/sys-error.log debug;

events {
    # Number of connections per worker
    worker_connections 1024;
}

http {
    sendfile on;
    include ./mime.types;
    include ./gzip.on;
    resolver 10.134.129.135 valid=3600s;

    #允许客户端请求的最大单文件字节数
    client_body_buffer_size 2m;

    keepalive_timeout  65;
    charset utf8;

    lua_package_path "./app/?.lua;./app/library/?.lua;./app/?/init.lua;./?.lua;/usr/local/lor/?.lua;/usr/local/lor/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/lualib/kafka/?.lua;;;";
    lua_package_cpath "./app/library/?.so;/usr/local/lor/?.so;;";

    lua_code_cache off;

    #LUA_SHARED_DICT
    lua_shared_dict config      1m;
    lua_shared_dict shared_data 20m;
    lua_shared_dict eval_script 1m;
    lua_shared_dict ip_data     5m;

    error_log logs/mq-error.log debug;
    
    log_format  access_frm   '$fmt_localtime [info] $pid#$pid: *$connection $remote_user status: $status req_time: $request_time body_size: $body_bytes_sent up_status: $upstream_status up_addr: $upstream_addr up_req_time: $upstream_response_time agnet: $http_user_agent forward: $http_x_forwarded_for, client: $remote_addr, server: $http_host, request: "$request" host: "$host", referrer: "$http_referer"';
    #log_format tick "$msec^A$remote_addr^A$u_domain^A$u_url^A$u_title^A$u_referrer^A$u_sh^A$u_sw^A$u_cd^A$u_lang^A$http_user_agent^A$u_utrace^A$u_account";
    #取一个标准格式的时间
    map $host $fmt_localtime {
        default $time_iso8601;
    }

    log_by_lua_block {
       ngx.var.fmt_localtime = ngx.re.gsub(ngx.localtime(),[[-]],[[/]]);
    }

    #初始化
    init_by_lua_file ./app/init.lua;

    #定时执行的任务
    init_worker_by_lua_file ./app/services/server.lua;

    server {
        #监听端口
        listen 8881;

        resolver 127.0.0.1 10.134.129.135;
        
        default_type text/html;

        #访问日志
        access_log logs/dev-web-access.log;
        
        #错误日志
        error_log logs/dev-web-error.log debug;
        
        #配置请求体缓存区大小, 不配的话
        client_body_buffer_size 2m;

        #设置客户端请求体最大值
        client_max_body_size 5m;

        #设置临时文件存放路径。只有当上传的请求体超出缓存区大小时，才会写到临时文件中,注意临时路径要有写入权限
        client_body_temp_path /tmp;

        lua_check_client_abort on;
        lua_socket_log_errors off;

        set_by_lua $fmt_localtime 'return ngx.re.gsub(ngx.localtime(),[[-]],[[/]])';

        set $session_storage redis;
        set $session_secret 3584827dfed45b40328acb6242bdf13b;

        # this variable is for view render（lua-resty-template)
        set $template_root '';
        #set $template_root /opt/vssas-devel/app/views;

        #set $template_location /templates;

        #html模板定位
        location /templates {
            internal;
            alias ./app/views/;
        }

        #静态资源
        location /static {
            add_header Access-Control-Allow-Origin *;   #部署时去掉，跨域
            alias ./app/static; #app/static;

            if ($request_filename ~* .*\.(?:js|css)$)
            {
                expires      1d;
            }

            if ($request_filename ~* .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)
            {
                expires      1d;
            }
        }
        
        #用于开发环境将APP调用的API接口指向测试环境
        location /app/v1 {
            proxy_pass  http://10.132.241.214:8889/app/v1;
            proxy_redirect ~^http://10.132.241.214:8889(.*)   http://10.132.241.214:8888$1;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            
            proxy_set_header Connection keep-alive;
            proxy_set_header Keep-Alive 600;
            keepalive_timeout 600;
        }

        #关键岗位WebSocket接入点
        location = /kp/ws {
            
            #访问日志
            access_log logs/ws-access.log;

            #错误日志
            error_log logs/ws-error.log debug;
    
            content_by_lua_file ./app/vsws/ws_servcies.lua;
        }

        #Kafka承接日志内容
        set $is_allow_kafka true;
        set $kafka_host_ip '10.132.241.214';
        set $kafka_port 9092;
        set $kafka_topics 'vssas-devel';
        set $kafka_partition 1;

        # 网站访问统计
        # include ./web.stats;
        
        # lor runtime
         location / {
             content_by_lua_file ./app/main.lua;
         }
    }
}