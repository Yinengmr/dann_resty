    #开启或者关闭gzip模块
    gzip on;
    #gzip默认最低支持1.1现在改成最低支持1.0 近代浏览器基本不设置
    gzip_http_version 1.0;

    #gzip最小长度 一般设置成1K就行，小于1K的就不压缩了 不然会越压越大
    gzip_min_length 1024;

    #默认值: gzip_buffers 4 4k/8k
    #作用域: http, server, location
    #设置系统获取几个单位的缓存用于存储gzip的压缩结 果数据流。 例如 4 4k 代表以4k为单位，按照原始数据大小以4k为单位的4倍申请内存。 4 8k 代表以8k为单位，按照原始数据大小以8k为单位的4倍申请内存。
    #如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果。
    gzip_buffers 4 16k;

    #gzip压缩比，1 压缩比最小处理速度最快，9 压缩比最大但处理最慢（传输快但比较消耗cpu）。
    gzip_comp_level 6;

    #匹配MIME类型进行压缩
    gzip_types  text/plain text/css application/javascript application/x-javascript text/xml application/xml text/javascript application/json;
    gzip_vary on;

    #语法: gzip_proxied [off|expired|no-cache|no-store|private|no_last_modified|no_etag|auth|any] ...
    #默认值: gzip_proxied off
    #作用域: http, server, location
    #Nginx作为反向代理的时候启用，开启或者关闭后端服务器返回的结果，匹配的前提是后端服务器必须要返回包含"Via"的 header头。
    #off - 关闭所有的代理结果数据的压缩
    #expired - 启用压缩，如果header头中包含 "Expires" 头信息
    #no-cache - 启用压缩，如果header头中包含 "Cache-Control:no-cache" 头信息
    #no-store - 启用压缩，如果header头中包含 "Cache-Control:no-store" 头信息
    #private - 启用压缩，如果header头中包含 "Cache-Control:private" 头信息
    #no_last_modified - 启用压缩,如果header头中不包含 "Last-Modified" 头信息
    #no_etag - 启用压缩 ,如果header头中不包含 "ETag" 头信息
    #auth - 启用压缩 , 如果header头中包含 "Authorization" 头信息
    #any - 无条件启用压缩
    gzip_proxied expired no-cache no-store private auth;